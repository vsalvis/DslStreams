/*****************************************
  Emitting Generated Code                  
*******************************************/
class test7(px58:Array[dsl.TestRepStreamOps$$anonfun$testRepStream7b$1$$anon$12@27d9b5ad.type#dsl.RepStreamOps$RepStreamOp[Int]]) extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = List()
var x2: scala.collection.immutable.List[Int] = x1
var x3: scala.collection.immutable.List[Int] = x1
val x4 = List(0)
x2 = x4
val x7 = List(0,1)
x2 = x7
val x10 = List(0,1,2)
x2 = x10
val x13 = List(0,1,2,3)
x2 = x13
val x16 = List(0,1,2,3,4)
x2 = x16
val x19 = List(0,1,2,3,4,x0)
x2 = x19
x2 = x1
val x22 = List(42)
x2 = x22
val x24 = println("----")
x3 = x1
val x27 = println("flush")
x2 = x1
val x29 = (42,43)
val x30 = println(x29)
val x31 = println("----")
x2 = x4
x2 = x7
x2 = x10
val x35 = List(1,2)
x2 = x35
val x37 = (0,1)
val x38 = println(x37)
val x9 = List(2)
x2 = x9
val x40 = (1,2)
val x41 = println(x40)
x2 = x1
val x43 = (2,3)
val x44 = println(x43)
val x15 = List(4)
x3 = x15
val x47 = List(4,5)
x3 = x47
val x25 = x0 + 1
val x50 = List(4,5,x25)
x3 = x50
x3 = x1
val x53 = List(43)
x3 = x53
val x55 = println("----")
var x56: scala.collection.immutable.List[Int] = x1
var x57: scala.collection.immutable.List[Int] = x1
val x58 = px58 // static data: Array(dsl.RepStreamOps$RepStreamFunctions$$anon$1@af922e8,dsl.RepStreamOps$RepMapOp@6a62b2f8)
val x59 = x58(0)
val x61 = x58(1)
val x63 = x58(0)
val x65 = x58(1)
val x67 = x58(0)
val x69 = x58(1)
val x71 = x58(0)
val x73 = x58(1)
val x75 = x58(0)
val x77 = x58(1)
val x79 = x58(0)
val x81 = x58(1)
val x83 = x58(0)
val x85 = x58(1)
val x87 = x58(0)
val x89 = x58(1)
val x91 = println("----")
val x92 = println(true)
val x93 = println(true)
val x94 = println(x4)
val x6 = List(1)
val x95 = println(x6)
val x96 = println(x9)
val x12 = List(3)
val x97 = println(x12)
val x98 = println(x15)
val x18 = List(x0)
val x99 = println(x18)
val x100 = println("flush")
val x101 = println(x22)
val x102 = println("----")
var x103: scala.collection.immutable.List[Int] = x1
var x104: scala.collection.immutable.List[Int] = x1
val x105 = println(true)
x103 = x4
x103 = x7
x103 = x10
x103 = x13
x103 = x16
x103 = x19
x103 = x1
x103 = x22
val x114 = println("----")
x104 = x1
val x116 = println("flush")
x103 = x1
val x118 = List(42,43)
val x119 = println(x118)
val x120 = println("----")
var x121: scala.collection.immutable.List[scala.collection.immutable.List[Int]] = x1
var x122: scala.collection.immutable.List[scala.collection.immutable.List[Int]] = x1
var x123: scala.collection.immutable.List[Int] = x1
var x124: scala.collection.immutable.List[Int] = x1
val x125 = println(true)
x123 = x4
x123 = x7
x123 = x10
x123 = x13
x123 = x16
x123 = x19
x123 = x1
x123 = x22
val x134 = println("----")
x124 = x1
x121 = x1
x123 = x1
val x138 = List(x118)
x121 = x138
val x140 = println("----")
x122 = x1
val x145 = println("flush")
x121 = x1
val x149 = List(42,43,44)
val x150 = println(x149)
val x151 = println("----")
x151
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
<stdin>:4: error: Invalid literal number
class staged$0(px192:Array[dsl.TestRepStreamOps$$anonfun$testRepStream7b$1$$anon$12@27d9b5ad.type#dsl.RepStreamOps$RepStreamOp[Int]]) extends ((Int)=>(Unit)) {
                                                                                    ^
<stdin>:4: error: Invalid literal number
class staged$0(px192:Array[dsl.TestRepStreamOps$$anonfun$testRepStream7b$1$$anon$12@27d9b5ad.type#dsl.RepStreamOps$RepStreamOp[Int]]) extends ((Int)=>(Unit)) {
                                                                                       ^
<stdin>:139: error: ']' expected but eof found.
*******************************************/
                                            ^
three errors found
compilation: had errors
