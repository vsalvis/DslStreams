/*****************************************
  Emitting Generated Code                  
*******************************************/
class test8(px1:Array[scala.collection.mutable.HashMap[Int, scala.collection.immutable.List[Int]]]) extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = px1 // static data: Array(Map())
val x2 = x1(0)
val x3 = x2.contains(0)
val x11 = if (x3) {
val x4 = x2(0)
val x5 = 0 :: x4
val x6 = x2(0) = x5
x6
} else {
val x8 = List(0)
val x9 = x2(0) = x8
x9
}
val x12 = x1(0) = x2
val x13 = println(x2)
val x14 = x1(0)
val x15 = x14.contains(2)
val x23 = if (x15) {
val x16 = x14(2)
val x17 = 1 :: x16
val x18 = x14(2) = x17
x18
} else {
val x20 = List(1)
val x21 = x14(2) = x20
x21
}
val x24 = x1(0) = x14
val x25 = println(x14)
val x26 = x1(0)
val x27 = x26.contains(4)
val x35 = if (x27) {
val x28 = x26(4)
val x29 = 2 :: x28
val x30 = x26(4) = x29
x30
} else {
val x32 = List(2)
val x33 = x26(4) = x32
x33
}
val x36 = x1(0) = x26
val x37 = println(x26)
val x38 = x1(0)
val x39 = x38.contains(6)
val x47 = if (x39) {
val x40 = x38(6)
val x41 = 3 :: x40
val x42 = x38(6) = x41
x42
} else {
val x44 = List(3)
val x45 = x38(6) = x44
x45
}
val x48 = x1(0) = x38
val x49 = println(x38)
val x50 = x1(0)
val x51 = x50.contains(8)
val x59 = if (x51) {
val x52 = x50(8)
val x53 = 4 :: x52
val x54 = x50(8) = x53
x54
} else {
val x56 = List(4)
val x57 = x50(8) = x56
x57
}
val x60 = x1(0) = x50
val x61 = println(x50)
val x62 = x1(0)
val x63 = 2 * x0
val x64 = x62.contains(x63)
val x72 = if (x64) {
val x65 = x62(x63)
val x66 = x0 :: x65
val x67 = x62(x63) = x66
x67
} else {
val x69 = List(x0)
val x70 = x62(x63) = x69
x70
}
val x73 = x1(0) = x62
val x74 = println(x62)
val x75 = x1(0)
val x76 = x75.clear()
val x77 = x1(0) = x75
val x78 = println("flush")
val x79 = x1(0)
val x80 = x79.contains(84)
val x88 = if (x80) {
val x81 = x79(84)
val x82 = 42 :: x81
val x83 = x79(84) = x82
x83
} else {
val x85 = List(42)
val x86 = x79(84) = x85
x86
}
val x89 = x1(0) = x79
val x90 = println(x79)
val x91 = println("----")
val x92 = println("====")
x92
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
Map(0 -> List(0))
Map(2 -> List(1), 0 -> List(0))
Map(2 -> List(1), 4 -> List(2), 0 -> List(0))
Map(2 -> List(1), 4 -> List(2), 6 -> List(3), 0 -> List(0))
Map(8 -> List(4), 2 -> List(1), 4 -> List(2), 6 -> List(3), 0 -> List(0))
Map(8 -> List(4), 2 -> List(1), 4 -> List(2), 10 -> List(5), 6 -> List(3), 0 -> List(0))
flush
Map(84 -> List(42))
----
====
Map(84 -> List(42), 0 -> List(0))
Map(2 -> List(1), 84 -> List(42), 0 -> List(0))
Map(2 -> List(1), 4 -> List(2), 84 -> List(42), 0 -> List(0))
Map(2 -> List(1), 4 -> List(2), 84 -> List(42), 6 -> List(3), 0 -> List(0))
Map(8 -> List(4), 2 -> List(1), 4 -> List(2), 84 -> List(42), 6 -> List(3), 0 -> List(0))
Map(8 -> List(4), 2 -> List(1), 4 -> List(2), 10 -> List(5), 84 -> List(42), 6 -> List(3), 0 -> List(0))
flush
Map(84 -> List(42))
----
====
