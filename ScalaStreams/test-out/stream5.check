/*****************************************
  Emitting Generated Code                  
*******************************************/
class test5(px1:Array[Boolean],px62:Array[Boolean],px63:Array[Int],px61:Array[Int],px267:Array[Boolean],px268:Array[Int],px266:Array[Int]) extends ((Int)=>(Unit)) {
def apply(x0:Int): Unit = {
val x1 = px1 // static data: Array(false)
val x2 = x1(0)
val x8 = if (x2) {
()
} else {
val x4 = x1(0) = true
val x5 = println(-2)
val x6 = println(-1)
()
}
val x9 = println(0)
val x10 = x1(0)
val x16 = if (x10) {
()
} else {
val x12 = x1(0) = true
val x13 = println(-2)
val x14 = println(-1)
()
}
val x17 = println(1)
val x18 = x1(0)
val x24 = if (x18) {
()
} else {
val x20 = x1(0) = true
val x21 = println(-2)
val x22 = println(-1)
()
}
val x25 = println(2)
val x26 = x1(0)
val x32 = if (x26) {
()
} else {
val x28 = x1(0) = true
val x29 = println(-2)
val x30 = println(-1)
()
}
val x33 = println(3)
val x34 = x1(0)
val x40 = if (x34) {
()
} else {
val x36 = x1(0) = true
val x37 = println(-2)
val x38 = println(-1)
()
}
val x41 = println(4)
val x42 = x1(0)
val x48 = if (x42) {
()
} else {
val x44 = x1(0) = true
val x45 = println(-2)
val x46 = println(-1)
()
}
val x49 = println(x0)
val x50 = x1(0) = false
val x51 = println("flush")
val x52 = x1(0)
val x58 = if (x52) {
()
} else {
val x54 = x1(0) = true
val x55 = println(-2)
val x56 = println(-1)
()
}
val x59 = println(42)
val x60 = println("----")
val x62 = px62 // static data: Array(false)
val x64 = x62(0)
val x63 = px63 // static data: Array(0)
val x85 = if (x64) {
val x66 = x63(0)
val x61 = px61 // static data: Array(0)
val x67 = x61(x66)
val x68 = println(x67)
val x69 = x61(x66) = 0
val x70 = x66 + 1
val x71 = x70 / 1
val x72 = x70 - x71
val x73 = x63(0) = x72
x73
} else {
val x75 = x63(0)
val x61 = px61 // static data: Array(0)
val x76 = x61(x75) = 0
val x77 = x75 + 1
val x78 = x63(0) = x77
val x79 = x75 == 0
val x83 = if (x79) {
val x80 = x62(0) = true
val x81 = x63(0) = 0
x81
} else {
()
}
x83
}
val x86 = x62(0)
val x107 = if (x86) {
val x88 = x63(0)
val x61 = px61 // static data: Array(0)
val x89 = x61(x88)
val x90 = println(x89)
val x91 = x61(x88) = 1
val x92 = x88 + 1
val x93 = x92 / 1
val x94 = x92 - x93
val x95 = x63(0) = x94
x95
} else {
val x97 = x63(0)
val x61 = px61 // static data: Array(0)
val x98 = x61(x97) = 1
val x99 = x97 + 1
val x100 = x63(0) = x99
val x101 = x97 == 0
val x105 = if (x101) {
val x102 = x62(0) = true
val x103 = x63(0) = 0
x103
} else {
()
}
x105
}
val x108 = x62(0)
val x129 = if (x108) {
val x110 = x63(0)
val x61 = px61 // static data: Array(0)
val x111 = x61(x110)
val x112 = println(x111)
val x113 = x61(x110) = 2
val x114 = x110 + 1
val x115 = x114 / 1
val x116 = x114 - x115
val x117 = x63(0) = x116
x117
} else {
val x119 = x63(0)
val x61 = px61 // static data: Array(0)
val x120 = x61(x119) = 2
val x121 = x119 + 1
val x122 = x63(0) = x121
val x123 = x119 == 0
val x127 = if (x123) {
val x124 = x62(0) = true
val x125 = x63(0) = 0
x125
} else {
()
}
x127
}
val x130 = x62(0)
val x151 = if (x130) {
val x132 = x63(0)
val x61 = px61 // static data: Array(0)
val x133 = x61(x132)
val x134 = println(x133)
val x135 = x61(x132) = 3
val x136 = x132 + 1
val x137 = x136 / 1
val x138 = x136 - x137
val x139 = x63(0) = x138
x139
} else {
val x141 = x63(0)
val x61 = px61 // static data: Array(0)
val x142 = x61(x141) = 3
val x143 = x141 + 1
val x144 = x63(0) = x143
val x145 = x141 == 0
val x149 = if (x145) {
val x146 = x62(0) = true
val x147 = x63(0) = 0
x147
} else {
()
}
x149
}
val x152 = x62(0)
val x173 = if (x152) {
val x154 = x63(0)
val x61 = px61 // static data: Array(0)
val x155 = x61(x154)
val x156 = println(x155)
val x157 = x61(x154) = 4
val x158 = x154 + 1
val x159 = x158 / 1
val x160 = x158 - x159
val x161 = x63(0) = x160
x161
} else {
val x163 = x63(0)
val x61 = px61 // static data: Array(0)
val x164 = x61(x163) = 4
val x165 = x163 + 1
val x166 = x63(0) = x165
val x167 = x163 == 0
val x171 = if (x167) {
val x168 = x62(0) = true
val x169 = x63(0) = 0
x169
} else {
()
}
x171
}
val x174 = x62(0)
val x195 = if (x174) {
val x176 = x63(0)
val x61 = px61 // static data: Array(0)
val x177 = x61(x176)
val x178 = println(x177)
val x179 = x61(x176) = x0
val x180 = x176 + 1
val x181 = x180 / 1
val x182 = x180 - x181
val x183 = x63(0) = x182
x183
} else {
val x185 = x63(0)
val x61 = px61 // static data: Array(0)
val x186 = x61(x185) = x0
val x187 = x185 + 1
val x188 = x63(0) = x187
val x189 = x185 == 0
val x193 = if (x189) {
val x190 = x62(0) = true
val x191 = x63(0) = 0
x191
} else {
()
}
x193
}
val x196 = x62(0) = false
val x197 = x63(0) = 0
val x198 = println("flush")
val x199 = x62(0)
val x220 = if (x199) {
val x201 = x63(0)
val x61 = px61 // static data: Array(0)
val x202 = x61(x201)
val x203 = println(x202)
val x204 = x61(x201) = 42
val x205 = x201 + 1
val x206 = x205 / 1
val x207 = x205 - x206
val x208 = x63(0) = x207
x208
} else {
val x210 = x63(0)
val x61 = px61 // static data: Array(0)
val x211 = x61(x210) = 42
val x212 = x210 + 1
val x213 = x63(0) = x212
val x214 = x210 == 0
val x218 = if (x214) {
val x215 = x62(0) = true
val x216 = x63(0) = 0
x216
} else {
()
}
x218
}
val x221 = println("----")
val x222 = x62(0)
val x243 = if (x222) {
val x224 = x63(0)
val x61 = px61 // static data: Array(0)
val x225 = x61(x224)
val x226 = println(x225)
val x227 = x61(x224) = 6
val x228 = x224 + 1
val x229 = x228 / 1
val x230 = x228 - x229
val x231 = x63(0) = x230
x231
} else {
val x233 = x63(0)
val x61 = px61 // static data: Array(0)
val x234 = x61(x233) = 6
val x235 = x233 + 1
val x236 = x63(0) = x235
val x237 = x233 == 0
val x241 = if (x237) {
val x238 = x62(0) = true
val x239 = x63(0) = 0
x239
} else {
()
}
x241
}
val x244 = x62(0)
val x265 = if (x244) {
val x246 = x63(0)
val x61 = px61 // static data: Array(0)
val x247 = x61(x246)
val x248 = println(x247)
val x249 = x61(x246) = 7
val x250 = x246 + 1
val x251 = x250 / 1
val x252 = x250 - x251
val x253 = x63(0) = x252
x253
} else {
val x255 = x63(0)
val x61 = px61 // static data: Array(0)
val x256 = x61(x255) = 7
val x257 = x255 + 1
val x258 = x63(0) = x257
val x259 = x255 == 0
val x263 = if (x259) {
val x260 = x62(0) = true
val x261 = x63(0) = 0
x261
} else {
()
}
x263
}
val x267 = px267 // static data: Array(false)
val x269 = x267(0)
val x268 = px268 // static data: Array(0)
val x291 = if (x269) {
val x271 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x272 = x266(x271)
val x273 = println(x272)
val x274 = x266(x271) = 0
val x275 = x271 + 1
val x276 = x275 / 3
val x277 = 3 * x276
val x278 = x275 - x277
val x279 = x268(0) = x278
x279
} else {
val x281 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x282 = x266(x281) = 0
val x283 = x281 + 1
val x284 = x268(0) = x283
val x285 = x281 == 2
val x289 = if (x285) {
val x286 = x267(0) = true
val x287 = x268(0) = 0
x287
} else {
()
}
x289
}
val x292 = x267(0)
val x314 = if (x292) {
val x294 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x295 = x266(x294)
val x296 = println(x295)
val x297 = x266(x294) = 1
val x298 = x294 + 1
val x299 = x298 / 3
val x300 = 3 * x299
val x301 = x298 - x300
val x302 = x268(0) = x301
x302
} else {
val x304 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x305 = x266(x304) = 1
val x306 = x304 + 1
val x307 = x268(0) = x306
val x308 = x304 == 2
val x312 = if (x308) {
val x309 = x267(0) = true
val x310 = x268(0) = 0
x310
} else {
()
}
x312
}
val x315 = x267(0)
val x337 = if (x315) {
val x317 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x318 = x266(x317)
val x319 = println(x318)
val x320 = x266(x317) = 2
val x321 = x317 + 1
val x322 = x321 / 3
val x323 = 3 * x322
val x324 = x321 - x323
val x325 = x268(0) = x324
x325
} else {
val x327 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x328 = x266(x327) = 2
val x329 = x327 + 1
val x330 = x268(0) = x329
val x331 = x327 == 2
val x335 = if (x331) {
val x332 = x267(0) = true
val x333 = x268(0) = 0
x333
} else {
()
}
x335
}
val x338 = x267(0)
val x360 = if (x338) {
val x340 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x341 = x266(x340)
val x342 = println(x341)
val x343 = x266(x340) = 3
val x344 = x340 + 1
val x345 = x344 / 3
val x346 = 3 * x345
val x347 = x344 - x346
val x348 = x268(0) = x347
x348
} else {
val x350 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x351 = x266(x350) = 3
val x352 = x350 + 1
val x353 = x268(0) = x352
val x354 = x350 == 2
val x358 = if (x354) {
val x355 = x267(0) = true
val x356 = x268(0) = 0
x356
} else {
()
}
x358
}
val x361 = x267(0)
val x383 = if (x361) {
val x363 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x364 = x266(x363)
val x365 = println(x364)
val x366 = x266(x363) = 4
val x367 = x363 + 1
val x368 = x367 / 3
val x369 = 3 * x368
val x370 = x367 - x369
val x371 = x268(0) = x370
x371
} else {
val x373 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x374 = x266(x373) = 4
val x375 = x373 + 1
val x376 = x268(0) = x375
val x377 = x373 == 2
val x381 = if (x377) {
val x378 = x267(0) = true
val x379 = x268(0) = 0
x379
} else {
()
}
x381
}
val x384 = x267(0)
val x406 = if (x384) {
val x386 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x387 = x266(x386)
val x388 = println(x387)
val x389 = x266(x386) = x0
val x390 = x386 + 1
val x391 = x390 / 3
val x392 = 3 * x391
val x393 = x390 - x392
val x394 = x268(0) = x393
x394
} else {
val x396 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x397 = x266(x396) = x0
val x398 = x396 + 1
val x399 = x268(0) = x398
val x400 = x396 == 2
val x404 = if (x400) {
val x401 = x267(0) = true
val x402 = x268(0) = 0
x402
} else {
()
}
x404
}
val x407 = x267(0) = false
val x408 = x268(0) = 0
val x409 = println("flush")
val x410 = x267(0)
val x432 = if (x410) {
val x412 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x413 = x266(x412)
val x414 = println(x413)
val x415 = x266(x412) = 42
val x416 = x412 + 1
val x417 = x416 / 3
val x418 = 3 * x417
val x419 = x416 - x418
val x420 = x268(0) = x419
x420
} else {
val x422 = x268(0)
val x266 = px266 // static data: Array(0,0,0)
val x423 = x266(x422) = 42
val x424 = x422 + 1
val x425 = x268(0) = x424
val x426 = x422 == 2
val x430 = if (x426) {
val x427 = x267(0) = true
val x428 = x268(0) = 0
x428
} else {
()
}
x430
}
val x433 = println("----")
val x434 = println("====")
x434
}
}
/*****************************************
  End of Generated Code                  
*******************************************/
compilation: ok
-2
-1
0
1
2
3
4
5
flush
-2
-1
42
----
0
1
2
3
4
flush
----
42
6
0
1
2
flush
----
====
0
1
2
3
4
5
flush
-2
-1
42
----
7
0
1
2
3
4
flush
----
42
6
42
0
1
2
flush
----
====
